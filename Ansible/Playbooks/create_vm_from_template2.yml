---
- name: Create multiple VMs using Cloud-Init and DHCP configuration
  hosts: PXEAnsibleDC-Proxmox
  gather_facts: false

  vars:
    vm_count: 3  # Anzahl der zu erstellenden VMs
    base_name: "VM-auto"
    starting_id: 2001  # Start-ID f√ºr die VMs
    ansible_python_interpreter: "/root/proxmoxer-venv/bin/python3"

  tasks:
    - name: Get list of existing VMs
      community.general.proxmox_kvm:
        node: diego-proxmox-srv
        api_user: root@pam
        api_password: Zli12345
        api_host: 10.80.15.32
        name: "{{ base_name }}-"  # Filtern nach VMs mit Namen, die mit base_name- beginnen
        state: present
      register: existing_vms

    - name: Populate existing VM IDs list
      set_fact:
        existing_vmid_list: "{{ existing_vms.virtual_machines | map(attribute='vmid') | list }}"

    - name: Create new VM using Cloud-Init and DHCP configuration
      community.general.proxmox_kvm:
        node: diego-proxmox-srv
        api_user: root@pam
        api_password: Zli12345
        api_host: 10.80.15.32
        name: "{{ base_name }}-{{ starting_id + item }}"
        vmid: "{{ starting_id + item }}"
        ide:
          ide2: 'local:cloudinit,format=qcow2'
        scsihw: virtio-scsi-pci  # Specify SCSI controller type
        ciuser: "user{{ starting_id + item }}"
        cipassword: "password{{ starting_id + item }}"
        net:
          net0: 'virtio,bridge=vmbr1'
        state: present  # Create the VM but do not start it
      loop: "{{ range(1, vm_count + 1) | list }}"
      loop_control:
        loop_var: item
      when: "'{{ starting_id + item }}' not in existing_vmid_list | map('string')"
